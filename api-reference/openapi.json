{
  "openapi": "3.0.1",
  "info": {
    "title": "OpenAPI Plant Store",
    "description": "A sample API that uses a plant store as an example to demonstrate features in the OpenAPI specification",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://eem8awwavp.us-east-1.awsapprunner.com/api/v1"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/compress-extreme-image": {
      "post": {
        "description": "Compresses an image to an extreme degree, reducing file size significantly and returns the compressed image for download.",
        "requestBody": {
          "description": "Image file to be compressed.",
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "image": {
                    "type": "string",
                    "format": "binary",
                    "description": "The image file to compress."
                  }
                },
                "required": ["image"]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Compressed image returned for download.",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Possible issues: invalid image file or compression service failure.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Image compression failed: Invalid image file."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error. An unexpected error occurred during compression.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Image compression failed."
                    },
                    "details": {
                      "type": "string",
                      "example": "An unexpected error occurred: Memory allocation issue."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/document-identification": {
      "post": {
        "summary": "Identifies the card, its side, and if it's blurry or grayscale",
        "description": "This API is designed to detect and classify identity cards, such as PAN and Aadhar cards, from input images. The service returns information about the detected card, whether the image is grayscale, and whether the image is blurry.",
        "requestBody": {
          "description": "Image file to be analyzed for card identification.",
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "image/jpeg",
                "properties": {
                  "image": {
                    "type": "string",
                    "format": "binary",
                    "description": "The image file to analyze."
                  }
                },
                "required": ["image"]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The card identification result, including card type, side, and image quality status.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "card": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "The type of card identified (e.g., 'pan', 'adr_front', 'adr_back')."
                      },
                      "description": "The type of card detected."
                    },
                    "is_grayscale": {
                      "type": "boolean",
                      "description": "Indicates if the image is grayscale."
                    },
                    "is_blur": {
                      "type": "boolean",
                      "description": "Indicates if the image is blurry."
                    }
                  },
                  "example": {
                    "card": ["pan"],
                    "is_grayscale": false,
                    "is_blur": false
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Possible issues: invalid image file or detection failure.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Card detection failed: Invalid image file."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error. An unexpected error occurred during card detection.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Card detection failed."
                    },
                    "details": {
                      "type": "string",
                      "example": "An unexpected error occurred: Memory allocation issue."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/pan-signature-extraction": {
      "post": {
        "summary": "Extract the signature of the person from a PAN card",
        "description": "This endpoint processes the image of a PAN card and extracts the person's signature, returning it as a PNG image. The image must clearly show the signature section of the PAN card to ensure accurate extraction.",
        "requestBody": {
          "description": "Image file of the PAN card from which the signature is to be extracted.",
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "image": {
                    "type": "string",
                    "format": "binary",
                    "description": "The image file of the PAN card to extract the signature from."
                  }
                },
                "required": ["image"]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The extracted signature as a PNG image.",
            "content": {
              "image/png": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "example": {
                    "signature": {
                      "summary": "Sample signature image",
                      "value": {
                        "url": "./examples/example.png"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Possible issues: signature not detected or invalid PAN card image.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Signature not found in the image."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error. An unexpected error occurred during signature extraction.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Signature extraction failed."
                    },
                    "details": {
                      "type": "string",
                      "example": "An unexpected error occurred: Processing issue."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/picture-extraction": {
      "post": {
        "summary": "Extract image of the person from any document",
        "description": "This endpoint extracts the photo of the person from any document image and returns the extracted image as a PNG file.",
        "requestBody": {
          "description": "Image file from which the person's photo is to be extracted.",
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "image": {
                    "type": "string",
                    "format": "binary",
                    "description": "The image file to extract the person's photo from."
                  }
                },
                "required": ["image"]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The extracted photo as a PNG image.",
            "content": {
              "image/png": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "example": "data:image/png;base64,..."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Possible issues: photo not detected or invalid document image.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Photo not detected on the document."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error. An unexpected error occurred during photo extraction.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Photo extraction failed."
                    },
                    "details": {
                      "type": "string",
                      "example": "An unexpected error occurred: Processing issue."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/internal-verification": {
      "post": {
        "summary": "Verify if the extracted information from cards are as per government guidelines to mitigate tamper",
        "description": "This endpoint accepts an Aadhaar Number for Aadhaar internal verification or a PAN Number (with an optional Name) for PAN internal verification.",
        "requestBody": {
          "description": "A JSON object containing Aadhaar or PAN card details for internal verification.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "Aadhaar_or_PAN_number": {
                    "type": "string",
                    "description": "Aadhaar number or PAN number for internal verification.",
                    "example": "645612790918"
                  },
                  "Name": {
                    "type": "string",
                    "description": "Holder's name for PAN verification (optional).",
                    "example": "Your Name"
                  }
                },
                "required": ["Aadhaar_or_PAN_number"]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Verification result, including whether it was successful, a message, and additional details like PAN type.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "verified": {
                      "type": "boolean",
                      "description": "Indicates if the verification was successful.",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "description": "A message indicating the result of the verification.",
                      "example": "PAN Verified"
                    },
                    "pan_type": {
                      "type": "string",
                      "description": "The type of PAN card verified (e.g., 'Personal', 'Business').",
                      "example": "Personal"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Invalid Aadhaar number, PAN number, or missing details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Invalid Aadhaar number or PAN number."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error. An unexpected error occurred during verification.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Verification failed."
                    },
                    "details": {
                      "type": "string",
                      "example": "An unexpected error occurred: Processing issue."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/aadhaar-demographic-verification": {
      "post": {
        "summary": "Extracts basic details for demographic verification from Aadhaar inputs",
        "description": "This endpoint accepts Aadhaar Number, pincode, and date of birth (DOB) as input. It verifies the details and returns a response with the verification status, associated state, and age band.",
        "requestBody": {
          "description": "The Aadhaar number, date of birth, and pincode for demographic verification.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "aadhaar_number": {
                    "type": "string",
                    "description": "The Aadhaar number to verify."
                  },
                  "dob": {
                    "type": "string",
                    "format": "date",
                    "description": "The date of birth in dd/mm/yyyy format."
                  },
                  "pincode": {
                    "type": "string",
                    "description": "The pincode associated with the Aadhaar number."
                  }
                },
                "required": ["aadhaar_number", "dob", "pincode"]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response with the verification result.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Verification": {
                      "type": "string",
                      "description": "Verification status message.",
                      "example": "Successful!"
                    },
                    "State": {
                      "type": "string",
                      "description": "The state associated with the Aadhaar number.",
                      "example": "Gujarat"
                    },
                    "Age Band": {
                      "type": "object",
                      "description": "The age band determined based on the date of birth.",
                      "properties": {
                        "lower_limit": {
                          "type": "string",
                          "description": "The lower age limit of the band.",
                          "example": "20"
                        },
                        "upper_limit": {
                          "type": "string",
                          "description": "The upper age limit of the band.",
                          "example": "30"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "Verification": "Successful!",
                  "State": "Gujarat",
                  "Age Band": {
                    "lower_limit": "20",
                    "upper_limit": "30"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Possible issues: missing or invalid Aadhaar number, DOB, or pincode.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Invalid Aadhaar details."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error. An unexpected error occurred during Aadhaar verification.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Verification failed."
                    },
                    "details": {
                      "type": "string",
                      "example": "An unexpected error occurred during the demographic verification process."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/aadhaar-ocr": {
      "post": {
        "summary": "Extract relevant data from the Aadhaar Card",
        "description": "This endpoint extracts detailed information from an Aadhaar card image, including Aadhaar Number, Name, Gender, Date of Birth, Address, and Pincode.",
        "requestBody": {
          "description": "Two images of the Aadhaar card for OCR processing. The first image is the front side, and the second image is the back side.",
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "image1": {
                    "type": "string",
                    "format": "binary",
                    "description": "The first image (front side of the Aadhaar card)."
                  },
                  "image2": {
                    "type": "string",
                    "format": "binary",
                    "description": "The second image (back side of the Aadhaar card)."
                  }
                },
                "required": ["image1", "image2"]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully extracted Aadhaar information.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Aadhaar_number": {
                      "type": "string",
                      "description": "The Aadhaar number extracted from the card.",
                      "example": "6246 7290 1324"
                    },
                    "Gender": {
                      "type": "string",
                      "description": "The gender of the Aadhaar holder.",
                      "example": "Male"
                    },
                    "Name": {
                      "type": "string",
                      "description": "The name of the Aadhaar holder.",
                      "example": "Jimmit Patel"
                    },
                    "Date of Birth": {
                      "type": "string",
                      "description": "The date of birth of the Aadhaar holder.",
                      "example": "12/05/1996"
                    },
                    "Address": {
                      "type": "string",
                      "description": "The address of the Aadhaar holder.",
                      "example": "C-304, Surya Kutir, 100 Feet Road, Opp. Sai Baba Mandir, Near Railway Station, Ahmedabad, Gujarat"
                    },
                    "Pincode": {
                      "type": "string",
                      "description": "The pincode of the Aadhaar holder's address.",
                      "example": "381001"
                    }
                  }
                },
                "example": {
                  "Aadhaar_number": "6246 7290 1324",
                  "Gender": "Male",
                  "Name": "Jimmit Patel",
                  "Date of Birth": "12/05/1996",
                  "Address": "C-304, Surya Kutir, 100 Feet Road, Opp. Sai Baba Mandir, Near Railway Station, Ahmedabad, Gujarat",
                  "Pincode": "381001"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Possible issues: missing or invalid images or OCR failure.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Unable to extract or verify Aadhaar information."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error. An unexpected error occurred during OCR processing.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "OCR failed."
                    },
                    "details": {
                      "type": "string",
                      "example": "An unexpected error occurred while extracting data from the images."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/pan-ocr": {
      "post": {
        "summary": "Extract relevant data from the PAN Card",
        "description": "This endpoint extracts detailed information from a PAN card image, including PAN number, PAN type, Date of Birth, Name, and Father's Name.",
        "requestBody": {
          "description": "The image of the PAN card for OCR processing.",
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "image": {
                    "type": "string",
                    "format": "binary",
                    "description": "The image of the PAN card."
                  }
                },
                "required": ["image"]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully extracted PAN information.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "PAN_number": {
                      "type": "string",
                      "description": "The PAN number extracted from the card.",
                      "example": "DJXPS8991H"
                    },
                    "PAN_type": {
                      "type": "string",
                      "description": "The type of PAN card (e.g., 'Personal', 'Business').",
                      "example": "Personal"
                    },
                    "Date_of_Birth": {
                      "type": "string",
                      "description": "The date of birth of the PAN card holder.",
                      "example": "06/06/1980"
                    },
                    "Name": {
                      "type": "string",
                      "description": "The name of the PAN card holder.",
                      "example": "T SENTHIL ARASU"
                    },
                    "Fathers_Name": {
                      "type": "string",
                      "description": "The father's name of the PAN card holder.",
                      "example": "THANGARAJ"
                    }
                  }
                },
                "example": {
                  "PAN_number": "DJXPS8991H",
                  "PAN_type": "Personal",
                  "Date_of_Birth": "06/06/1980",
                  "Name": "T SENTHIL ARASU",
                  "Fathers_Name": "THANGARAJ"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Unable to extract or verify PAN information.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Invalid PAN card image or OCR processing failed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error. An unexpected error occurred during OCR processing.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "OCR failed."
                    },
                    "details": {
                      "type": "string",
                      "example": "An unexpected error occurred while extracting data from the image."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/image-quality-analyzer": {
      "post": {
        "summary": "Analyzes images based on various standard scores like BRISQUE, blurriness, brightness, and more.",
        "description": "This endpoint analyzes the quality of an image and provides various standard scores such as blurriness, BRISQUE, background uniformity, brightness, and contrast.",
        "requestBody": {
          "description": "The image file to be analyzed for quality.",
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "image": {
                    "type": "string",
                    "format": "binary",
                    "description": "The image file to analyze."
                  }
                },
                "required": ["image"]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully analyzed image quality.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "is_grayscale": {
                      "type": "boolean",
                      "description": "Indicates whether the image is in grayscale.",
                      "example": false
                    },
                    "is_blur": {
                      "type": "boolean",
                      "description": "Indicates whether the image is blurry.",
                      "example": false
                    },
                    "blurriness_score": {
                      "type": "number",
                      "description": "The calculated blurriness score of the image.",
                      "example": 23.67
                    },
                    "brisque_score": {
                      "type": "number",
                      "description": "The BRISQUE score indicating overall image quality.",
                      "example": 40.13
                    },
                    "background_uniformity_score": {
                      "type": "number",
                      "description": "The uniformity of the background in the image.",
                      "example": 76.00
                    },
                    "brightness_score": {
                      "type": "number",
                      "description": "The brightness level of the image.",
                      "example": 22.41
                    },
                    "contrast_score": {
                      "type": "number",
                      "description": "The contrast level of the image.",
                      "example": 92.97
                    }
                  }
                },
                "example": {
                  "is_grayscale": false,
                  "is_blur": false,
                  "blurriness_score": "23.67",
                  "brisque_score": "40.13",
                  "background_uniformity_score": "76.00",
                  "brightness_score": "22.41",
                  "contrast_score": "92.97"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Invalid or unsupported image file.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Invalid image file format or corrupted image."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error. An unexpected error occurred during image analysis.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Image analysis failed."
                    },
                    "details": {
                      "type": "string",
                      "example": "An unexpected error occurred while processing the image."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/aadhaar-demographic-ocr": {
      "post": {
        "summary": "Extracts basic demographic details from Aadhaar images",
        "description": "This endpoint extracts demographic details such as Aadhaar Number, Gender, Age Range, and State from the provided Aadhaar card images.",
        "requestBody": {
          "description": "Two images of the Aadhaar card for OCR processing. The first image is the front side, and the second image is the back side.",
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "image1": {
                    "type": "string",
                    "format": "binary",
                    "description": "The first image (front side of the Aadhaar card)."
                  },
                  "image2": {
                    "type": "string",
                    "format": "binary",
                    "description": "The second image (back side of the Aadhaar card)."
                  }
                },
                "required": ["image1", "image2"]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully extracted demographic details from Aadhaar images.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Aadhaar Number": {
                      "type": "string",
                      "description": "The Aadhaar number extracted from the card.",
                      "example": "XXXX XXXX 0599"
                    },
                    "Gender": {
                      "type": "string",
                      "description": "The gender of the Aadhaar holder.",
                      "example": "Female"
                    },
                    "Age Range": {
                      "type": "string",
                      "description": "The age range derived from the Aadhaar holder's date of birth.",
                      "example": "40-50"
                    },
                    "State": {
                      "type": "string",
                      "description": "The state associated with the Aadhaar number.",
                      "example": "Kerela"
                    }
                  }
                },
                "example": {
                  "Aadhaar Number": "XXXX XXXX 0599",
                  "Gender": "Female",
                  "Age Range": "40-50",
                  "State": "Kerela"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Unable to extract or verify Aadhaar demographic information.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Invalid Aadhaar images provided or OCR processing failed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error. An unexpected error occurred during OCR processing.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "OCR processing failed."
                    },
                    "details": {
                      "type": "string",
                      "example": "An unexpected error occurred while extracting data from the images."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/aadhaar-verification": {
      "post": {
        "summary": "Complete end-to-end Aadhaar Verification from the images of Aadhaar Card",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "image1": {
                    "type": "string",
                    "format": "binary"
                  },
                  "image2": {
                    "type": "string",
                    "format": "binary"
                  }
                },
                "required": ["image1", "image2"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully completed Aadhaar verification"
          },
          "400": {
            "description": "Verification failed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/pan-verification": {
      "post": {
        "summary": "Complete end-to-end PAN Verification from the image of PAN Card",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "image": {
                    "type": "string",
                    "format": "binary"
                  }
                },
                "required": ["image"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully completed PAN verification"
          },
          "400": {
            "description": "Verification failed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/compress-large-image": {
      "post": {
        "summary": "Compress large images of up to 500 MB to 40 KB",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "image": {
                    "type": "string",
                    "format": "binary"
                  }
                },
                "required": ["image"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully compressed the image",
            "content": {
              "image/jpeg": {}
            }
          },
          "400": {
            "description": "Image file exceeds the 500 MB limit"
          },
          "500": {
            "description": "Image compression failed"
          }
        }
      }
    },
    "/compress-medium-image": {
      "post": {
        "summary": "Compress medium-sized images of up to 250 MB to 40 KB",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "image": {
                    "type": "string",
                    "format": "binary"
                  }
                },
                "required": ["image"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully compressed the image",
            "content": {
              "image/jpeg": {}
            }
          },
          "400": {
            "description": "Image file exceeds the 250 MB limit"
          },
          "500": {
            "description": "Image compression failed"
          }
        }
      }
    },
    "/compress-small-image": {
      "post": {
        "summary": "Compress small images of up to 75 MB to 40 KB",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "image": {
                    "type": "string",
                    "format": "binary"
                  }
                },
                "required": ["image"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully compressed the image",
            "content": {
              "image/jpeg": {}
            }
          },
          "400": {
            "description": "Image file exceeds the 75 MB limit"
          },
          "500": {
            "description": "Image compression failed"
          }
        }
      }
    },
    "/compress-nano-image": {
      "post": {
        "summary": "Compress small images of up to 20 MB to 40 KB",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "image": {
                    "type": "string",
                    "format": "binary"
                  }
                },
                "required": ["image"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully compressed the image",
            "content": {
              "image/jpeg": {}
            }
          },
          "400": {
            "description": "Image file exceeds the 20 MB limit"
          },
          "500": {
            "description": "Image compression failed"
          }
        }
      }
    },
    "/number-details-extraction": {
      "post": {
        "summary": "Verify phone number details",
        "description": "This endpoint accepts a phone number and an optional region code to verify its validity.",
        "requestBody": {
          "description": "The phone number to verify, along with an optional region code.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "phone_number": {
                    "type": "string",
                    "description": "The phone number to verify.",
                    "example": "9351728394"
                  },
                  "region": {
                    "type": "string",
                    "description": "The optional region code for the phone number.",
                    "example": "IN"
                  }
                },
                "required": ["phone_number"]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Phone number details successfully verified.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "phone_number": {
                      "type": "string",
                      "description": "The input phone number.",
                      "example": "9351728394"
                    },
                    "region": {
                      "type": "string",
                      "description": "The region code associated with the phone number.",
                      "example": "IN"
                    },
                    "valid": {
                      "type": "boolean",
                      "description": "Indicates if the phone number is valid.",
                      "example": true
                    },
                    "possible": {
                      "type": "boolean",
                      "description": "Indicates if the phone number is possible.",
                      "example": true
                    },
                    "country": {
                      "type": "string",
                      "description": "The country associated with the phone number.",
                      "example": "India"
                    },
                    "location": {
                      "type": "string",
                      "description": "The location associated with the phone number.",
                      "example": "India"
                    },
                    "carrier": {
                      "type": "string",
                      "description": "The carrier associated with the phone number, if available.",
                      "example": ""
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of phone number (e.g., 'Mobile', 'Landline').",
                      "example": "Mobile"
                    }
                  }
                },
                "example": {
                  "phone_number": "9351728394",
                  "region": "IN",
                  "valid": true,
                  "possible": true,
                  "country": "India",
                  "location": "India",
                  "carrier": "",
                  "type": "Mobile"
                }
              }
            }
          },
          "400": {
            "description": "Invalid phone number. The phone number provided is either incorrectly formatted or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "description": "Details about why the phone number is invalid.",
                      "example": "Invalid phone number format."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Failed to verify phone number. An unexpected error occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Details about the server error.",
                      "example": "Unable to verify phone number due to an internal error."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/face-verification": {
      "post": {
        "summary": "Verify face similarity between two images",
        "description": "This endpoint accepts two images and verifies if the faces in the images match. It provides a verification status, confidence level, and a descriptive message.",
        "requestBody": {
          "description": "Two images for face similarity verification.",
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "image1": {
                    "type": "string",
                    "format": "binary",
                    "description": "The first image for face verification."
                  },
                  "image2": {
                    "type": "string",
                    "format": "binary",
                    "description": "The second image for face verification."
                  }
                },
                "required": ["image1", "image2"]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully verified face similarity.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "verified": {
                      "type": "boolean",
                      "description": "Indicates whether the faces in the images match.",
                      "example": true
                    },
                    "confidence": {
                      "type": "number",
                      "description": "The confidence level of the face match.",
                      "example": 99.99960327148438
                    },
                    "message": {
                      "type": "string",
                      "description": "A descriptive message regarding the face verification result.",
                      "example": "Faces match with 100.00% confidence."
                    }
                  }
                },
                "example": {
                  "verified": true,
                  "confidence": 99.99960327148438,
                  "message": "Faces match with 100.00% confidence."
                }
              }
            }
          },
          "400": {
            "description": "Invalid file type. Please upload valid image files.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Invalid file type. Please upload valid image files."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Face verification failed. An unexpected error occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Face verification failed due to an internal error."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/create-liveness-session": {
      "post": {
        "summary": "Creates a Face Liveness Session",
        "description": "This endpoint creates a Face Liveness session and returns a unique Session ID for the session.",
        "requestBody": {
          "description": "This endpoint does not require a request body.",
          "required": false,
          "content": {}
        },
        "responses": {
          "200": {
            "description": "Successfully created Face Liveness session.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "SessionId": {
                      "type": "string",
                      "description": "The unique Session ID for the Face Liveness session.",
                      "example": "7f62d883-a0b3-4c6d-af00-57d135f8a793"
                    }
                  }
                },
                "example": {
                  "SessionId": "7f62d883-a0b3-4c6d-af00-57d135f8a793"
                }
              }
            }
          },
          "500": {
            "description": "Error creating session. An unexpected error occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Details about the server error.",
                      "example": "Failed to create Face Liveness session."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get-liveness-results": {
      "post": {
        "summary": "Fetches results for a Face Liveness session",
        "description": "This endpoint retrieves the liveness verification results for a given session using the provided `SessionId`.",
        "requestBody": {
          "description": "The SessionId of the liveness session for which results are to be fetched.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "SessionId": {
                    "type": "string",
                    "description": "The unique SessionId for the liveness session.",
                    "example": "34db5add-aa35-438a-af74-6caedf9ab67b"
                  }
                },
                "required": ["SessionId"]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved liveness results.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "SessionId": {
                      "type": "string",
                      "description": "The SessionId for which results were retrieved.",
                      "example": "34db5add-aa35-438a-af74-6caedf9ab67b"
                    },
                    "Confidence": {
                      "type": "number",
                      "description": "The confidence score for the liveness verification.",
                      "example": 0
                    },
                    "Status": {
                      "type": "string",
                      "description": "The status of the liveness session.",
                      "example": "CREATED"
                    }
                  }
                },
                "example": {
                  "SessionId": "34db5add-aa35-438a-af74-6caedf9ab67b",
                  "Confidence": 0,
                  "Status": "CREATED"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. The `SessionId` is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "description": "Error message indicating what is wrong with the request.",
                      "example": "SessionId is required."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error. An unexpected error occurred while fetching liveness results.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Details about the server error.",
                      "example": "Failed to fetch liveness results due to an internal error."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/create-email-code": {
      "post": {
        "summary": "Create a verification code for email",
        "description": "This endpoint generates and sends a verification code to the provided email address.",
        "requestBody": {
          "description": "The email address to which the verification code will be sent.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "The email address for which the verification code is to be generated.",
                    "example": "user@example.com"
                  }
                },
                "required": ["email"]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Verification code sent successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Confirmation message indicating the verification code was sent.",
                      "example": "Verification code sent successfully"
                    }
                  }
                },
                "example": {
                  "message": "Verification code sent successfully"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. The email field is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "description": "Details about the error.",
                      "example": "Email is required."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error. Failed to send the verification code due to a server issue.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Details about the server error.",
                      "example": "Failed to send verification code."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/verify-email-code": {
      "post": {
        "summary": "Verify email verification code",
        "description": "This endpoint verifies the email verification code sent to the user. Both the email and the code must be provided.",
        "requestBody": {
          "description": "The email address and verification code to verify.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "The email address to verify.",
                    "example": "user@example.com"
                  },
                  "code": {
                    "type": "string",
                    "description": "The verification code sent to the email address.",
                    "example": "123456"
                  }
                },
                "required": ["email", "code"]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Email verified successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Confirmation message indicating successful email verification.",
                      "example": "Email verified successfully"
                    }
                  }
                },
                "example": {
                  "message": "Email verified successfully"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. The verification code is invalid or expired.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "description": "Details about why the verification failed.",
                      "example": "Invalid or expired verification code."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error. An unexpected error occurred during email verification.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Details about the server error.",
                      "example": "Error verifying the email code due to an internal error."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/create-mobile-otp": {
      "post": {
        "summary": "Send OTP to a mobile number",
        "description": "This endpoint sends a One-Time Password (OTP) to the provided mobile number and returns a session ID for further verification.",
        "requestBody": {
          "description": "The mobile number to which the OTP will be sent.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "mobile": {
                    "type": "integer",
                    "description": "The mobile number to send the OTP.",
                    "example": 9876543210
                  }
                },
                "required": ["mobile"]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OTP sent successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "A message confirming the OTP was sent.",
                      "example": "OTP sent successfully"
                    },
                    "session_id": {
                      "type": "string",
                      "description": "The session ID for the OTP verification process.",
                      "example": "a9fa3a1c-ddba-447c-8f62-85c72e234163"
                    }
                  }
                },
                "example": {
                  "message": "OTP sent successfully",
                  "session_id": "a9fa3a1c-ddba-447c-8f62-85c72e234163"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. The mobile number is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "description": "Details about why the request is invalid.",
                      "example": "Mobile number is required."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error. An error occurred while sending the OTP.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Details about the server error.",
                      "example": "Failed to send OTP due to a server issue."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/verify-mobile-otp": {
      "post": {
        "summary": "Verify OTP for a mobile number",
        "description": "This endpoint verifies the One-Time Password (OTP) for a given mobile number.",
        "requestBody": {
          "description": "The mobile number and OTP to verify.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "mobile": {
                    "type": "integer",
                    "description": "The mobile number associated with the OTP.",
                    "example": 9876543210
                  },
                  "otp": {
                    "type": "integer",
                    "description": "The OTP to verify.",
                    "example": 123456
                  }
                },
                "required": ["mobile", "otp"]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OTP verified successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Confirmation message indicating successful OTP verification.",
                      "example": "OTP verified successfully"
                    }
                  }
                },
                "example": {
                  "message": "OTP verified successfully"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. OTP verification failed due to an invalid or expired OTP.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "description": "Details about why the OTP verification failed.",
                      "example": "Invalid or expired OTP."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error. An error occurred during OTP verification.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Details about the server error.",
                      "example": "Failed to verify OTP due to a server issue."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get-public-ip": {
      "get": {
        "summary": "Returns the public IP address of the client",
        "description": "This endpoint retrieves and returns the public IP address of the client making the request.",
        "responses": {
          "200": {
            "description": "Successfully retrieved public IP address.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "public_ip": {
                      "type": "string",
                      "description": "The public IP address of the client.",
                      "example": "2405:201:2014:6948:3953:3d44:e3c4:c66f"
                    }
                  }
                },
                "example": {
                  "public_ip": "2405:201:2014:6948:3953:3d44:e3c4:c66f"
                }
              }
            }
          },
          "500": {
            "description": "Unable to retrieve public IP address due to an internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Details about the error.",
                      "example": "Failed to retrieve public IP address."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get-geolocation": {
      "get": {
        "summary": "Returns the geolocation of the client based on their IP address",
        "description": "This endpoint retrieves the geolocation information of the client based on their public IP address.",
        "responses": {
          "200": {
            "description": "Successfully retrieved geolocation information.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ip": {
                      "type": "string",
                      "description": "The public IP address of the client.",
                      "example": "2405:201:2014:6948:3953:3d44:e3c4:c66f"
                    },
                    "country": {
                      "type": "string",
                      "description": "The country of the client.",
                      "example": "India"
                    },
                    "region": {
                      "type": "string",
                      "description": "The region or state of the client.",
                      "example": "Gujarat"
                    },
                    "city": {
                      "type": "string",
                      "description": "The city of the client.",
                      "example": "Surat"
                    },
                    "latitude": {
                      "type": "number",
                      "description": "The latitude of the client's location.",
                      "example": 21.1888
                    },
                    "longitude": {
                      "type": "number",
                      "description": "The longitude of the client's location.",
                      "example": 72.8293
                    }
                  }
                },
                "example": {
                  "ip": "2405:201:2014:6948:3953:3d44:e3c4:c66f",
                  "country": "India",
                  "region": "Gujarat",
                  "city": "Surat",
                  "latitude": 21.1888,
                  "longitude": 72.8293
                }
              }
            }
          },
          "500": {
            "description": "Unable to fetch geolocation due to an internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Details about the error.",
                      "example": "Failed to retrieve geolocation information."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get-geolocation-plus": {
      "get": {
        "summary": "Get dynamic geolocation info for the client's IP",
        "description": "This endpoint retrieves detailed geolocation information, including timezone and connection details, for the client based on their public IP address.",
        "responses": {
          "200": {
            "description": "Successfully retrieved dynamic geolocation information.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ip": {
                      "type": "string",
                      "description": "The public IP address of the client.",
                      "example": "2405:201:2014:6948:3953:3d44:e3c4:c66f"
                    },
                    "success": {
                      "type": "boolean",
                      "description": "Indicates if the geolocation retrieval was successful.",
                      "example": true
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of IP address (IPv4 or IPv6).",
                      "example": "IPv6"
                    },
                    "continent": {
                      "type": "string",
                      "description": "The continent of the client's location.",
                      "example": "Asia"
                    },
                    "continent_code": {
                      "type": "string",
                      "description": "The continent code of the client's location.",
                      "example": "AS"
                    },
                    "country": {
                      "type": "string",
                      "description": "The country of the client's location.",
                      "example": "India"
                    },
                    "country_code": {
                      "type": "string",
                      "description": "The country code of the client's location.",
                      "example": "IN"
                    },
                    "region": {
                      "type": "string",
                      "description": "The region or state of the client's location.",
                      "example": "Gujarat"
                    },
                    "region_code": {
                      "type": "string",
                      "description": "The region code of the client's location.",
                      "example": "GJ"
                    },
                    "city": {
                      "type": "string",
                      "description": "The city of the client's location.",
                      "example": "Surat"
                    },
                    "latitude": {
                      "type": "number",
                      "description": "The latitude coordinate of the client's location.",
                      "example": 21.1888
                    },
                    "longitude": {
                      "type": "number",
                      "description": "The longitude coordinate of the client's location.",
                      "example": 72.8293
                    },
                    "is_eu": {
                      "type": "boolean",
                      "description": "Indicates if the client's location is in the European Union.",
                      "example": false
                    },
                    "postal": {
                      "type": "string",
                      "description": "The postal code of the client's location.",
                      "example": "395005"
                    },
                    "timezone": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The timezone identifier.",
                          "example": "Asia/Kolkata"
                        },
                        "abbr": {
                          "type": "string",
                          "description": "The abbreviation of the timezone.",
                          "example": "IST"
                        },
                        "is_dst": {
                          "type": "boolean",
                          "description": "Indicates if Daylight Saving Time is active.",
                          "example": false
                        },
                        "offset": {
                          "type": "integer",
                          "description": "The UTC offset in seconds.",
                          "example": 19800
                        },
                        "utc": {
                          "type": "string",
                          "description": "The UTC offset in hours and minutes.",
                          "example": "+05:30"
                        },
                        "current_time": {
                          "type": "string",
                          "description": "The current time in the client's timezone.",
                          "example": "2024-12-31T14:42:15.286191+05:30"
                        }
                      }
                    },
                    "connection": {
                      "type": "object",
                      "properties": {
                        "asn": {
                          "type": "integer",
                          "description": "The Autonomous System Number (ASN) of the client's connection.",
                          "example": 55836
                        },
                        "org": {
                          "type": "string",
                          "description": "The organization associated with the ASN.",
                          "example": "Reliance Jio Infocomm Limited"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "ip": "2405:201:2014:6948:3953:3d44:e3c4:c66f",
                  "success": true,
                  "type": "IPv6",
                  "continent": "Asia",
                  "continent_code": "AS",
                  "country": "India",
                  "country_code": "IN",
                  "region": "Gujarat",
                  "region_code": "GJ",
                  "city": "Surat",
                  "latitude": 21.1888,
                  "longitude": 72.8293,
                  "is_eu": false,
                  "postal": "395005",
                  "timezone": {
                    "id": "Asia/Kolkata",
                    "abbr": "IST",
                    "is_dst": false,
                    "offset": 19800,
                    "utc": "+05:30",
                    "current_time": "2024-12-31T14:42:15.286191+05:30"
                  },
                  "connection": {
                    "asn": 55836,
                    "org": "Reliance Jio Infocomm Limited"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unable to fetch dynamic geolocation data due to an internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Details about the error.",
                      "example": "Failed to retrieve dynamic geolocation information."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/reverse-geocode": {
      "get": {
        "summary": "Reverse geocode latitude and longitude into detailed location data",
        "description": "This endpoint takes latitude and longitude coordinates and returns detailed location data including country, state, city, and additional metadata.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "latitude": {
                    "type": "number",
                    "description": "The latitude of the location to reverse geocode.",
                    "example": 21.1888
                  },
                  "longitude": {
                    "type": "number",
                    "description": "The longitude of the location to reverse geocode.",
                    "example": 72.8293
                  },
                  "language": {
                    "type": "string",
                    "description": "The preferred language for the result.",
                    "default": "en",
                    "example": "en"
                  }
                },
                "required": ["latitude", "longitude"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully reverse geocoded the coordinates.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "latitude": {
                      "type": "number",
                      "description": "The latitude of the location.",
                      "example": 21.1888
                    },
                    "longitude": {
                      "type": "number",
                      "description": "The longitude of the location.",
                      "example": 72.8293
                    },
                    "continent": {
                      "type": "string",
                      "description": "The continent of the location.",
                      "example": "Asia"
                    },
                    "continent_code": {
                      "type": "string",
                      "description": "The continent code of the location.",
                      "example": "AS"
                    },
                    "country": {
                      "type": "string",
                      "description": "The country of the location.",
                      "example": "India"
                    },
                    "country_code": {
                      "type": "string",
                      "description": "The country code of the location.",
                      "example": "IN"
                    },
                    "state": {
                      "type": "string",
                      "description": "The state of the location.",
                      "example": "Gujarat"
                    },
                    "state_code": {
                      "type": "string",
                      "description": "The state code of the location.",
                      "example": "IN-GJ"
                    },
                    "city": {
                      "type": "string",
                      "description": "The city of the location.",
                      "example": "Surat"
                    },
                    "locality": {
                      "type": "string",
                      "description": "The locality of the location.",
                      "example": "Surat"
                    },
                    "postal_code": {
                      "type": "string",
                      "description": "The postal code of the location.",
                      "example": ""
                    },
                    "plus_code": {
                      "type": "string",
                      "description": "The Plus Code of the location.",
                      "example": "7JHJ5RQH+GP"
                    }
                  }
                },
                "example": {
                  "latitude": 21.1888,
                  "longitude": 72.8293,
                  "continent": "Asia",
                  "continent_code": "AS",
                  "country": "India",
                  "country_code": "IN",
                  "state": "Gujarat",
                  "state_code": "IN-GJ",
                  "city": "Surat",
                  "locality": "Surat",
                  "postal_code": "",
                  "plus_code": "7JHJ5RQH+GP"
                }
              }
            }
          },
          "400": {
            "description": "Invalid coordinates provided. The latitude or longitude may be out of range.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Details about the invalid coordinates.",
                      "example": "Invalid latitude or longitude."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unable to reverse geocode the coordinates due to an internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Details about the error.",
                      "example": "Failed to process the reverse geocode request."
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Error": {
        "required": [
          "error",
          "message"
        ],
        "type": "object",
        "properties": {
          "error": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}
